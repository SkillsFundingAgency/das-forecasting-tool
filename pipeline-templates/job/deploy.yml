parameters:
  ServiceConnection:
  SolutionBaseName:
  Environment:
  OverrideBlockOnPossibleDataLoss: false
  AppRoleAssignmentsServiceConnection:

jobs:
- deployment: DeployWebApp
  pool:
    name: DAS - Continuous Deployment Agents
  environment: ${{ parameters.Environment }}
  strategy:
    runOnce:
      deploy:
        steps:
        - template: azure-pipelines-templates/deploy/step/wait-azure-devops-deployment.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            EnvironmentId: $(Environment.Id)
            PipelineName: $(Build.DefinitionName)
            RunId: $(Build.BuildId)
        - template: azure-pipelines-templates/deploy/step/appservice-whitelist-ip.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            ResourceName: $()
            RuleName: $(Release.DefinitionName)    
        - template: azure-pipelines-templates/deploy/step/arm-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            SubscriptionId: $(SubscriptionId)
            Location: $(ResourceGroupLocation)
            Environment: ${{ parameters.Environment }}
            TemplatePath: $(Pipeline.Workspace)/${{ parameters.SolutionBaseName }}/azure/template.json
            ParametersPath: $(Pipeline.Workspace)/${{ parameters.SolutionBaseName }}/azure/template.parameters.json
            IsMultiRepoCheckout: true
            TemplateSecrets:
              LoggingRedisConnectionString: $(LoggingRedisConnectionString)
              ConfigurationStorageConnectionString: $(ConfigurationStorageConnectionString)
        - template: azure-pipelines-templates/deploy/step/app-role-assignments.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.AppRoleAssignmentsServiceConnection }}
            ResourceName: $(FunctionAppNameCommitments)
            Tenant: $(Tenant)
            IsMultiRepoCheckout: true
        - template: azure-pipelines-templates/deploy/step/app-role-assignments.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.AppRoleAssignmentsServiceConnection }}
            ResourceName: $(FunctionAppNamePreload)
            Tenant: $(Tenant)
            IsMultiRepoCheckout: true
        - template: azure-pipelines-templates/deploy/step/generate-config.yml@das-platform-building-blocks
          parameters:
            EnvironmentName: $(EnvironmentName)
            ServiceConnection: ${{ parameters.ServiceConnection }}
            SourcePath: $(Pipeline.Workspace)/das-employer-config/Configuration/das-forecasting-tool
            StorageAccountName: $(ConfigurationStorageAccountName)
            StorageAccountResourceGroup: $(SharedEnvResourceGroup)
            TargetFileName: '*.schema.json'
            TableName: Configuration
            ConfigurationSecrets: {} # remove this if there are no secrets that need to be mapped for config
        - template: azure-pipelines-templates/deploy/step/sql-dacpac-deploy.yml@das-platform-building-blocks
          parameters:
            AzureSubscription: ${{ parameters.ServiceConnection }}
            ServerName: $(SharedSQLServerFQDN)
            SqlUsername: $(SharedSQLServerUsername)
            SqlPassword: $(SharedSQLServerPassword)
            DacpacFile: $(Pipeline.Workspace)/DacpacArtifact/${{ parameters.SolutionBaseName }}/Database/bin/Release/SFA.DAS.Forecasting.Database.dacpac
            DatabaseName: $(DatabaseName)
            OverrideBlockOnPossibleDataLoss: ${{ parameters.OverrideBlockOnPossibleDataLoss }}
            Environment: ${{ parameters.Environment }}
        - template: azure-pipelines-templates/deploy/step/function-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            FunctionAppName: $(FunctionAppNameCommitments)
            DeploymentPackagePath: $(Pipeline.Workspace)/${{ parameters.SolutionBaseName }}/${{ parameters.SolutionBaseName }}.Commitments.Functions.zip
        - template: azure-pipelines-templates/deploy/step/function-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            FunctionAppName: $(FunctionAppNameLevy)
            DeploymentPackagePath: $(Pipeline.Workspace)/${{ parameters.SolutionBaseName }}/${{ parameters.SolutionBaseName }}.Levy.Functions.zip    
        - template: azure-pipelines-templates/deploy/step/function-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            FunctionAppName: $(FunctionAppNamePayments)
            DeploymentPackagePath: $(Pipeline.Workspace)/${{ parameters.SolutionBaseName }}/${{ parameters.SolutionBaseName }}.Payments.Functions.zip
        - template: azure-pipelines-templates/deploy/step/function-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            FunctionAppName: $(FunctionAppNamePreload)
            DeploymentPackagePath: $(Pipeline.Workspace)/${{ parameters.SolutionBaseName }}/${{ parameters.SolutionBaseName }}.PreLoad.Functions.zip
        - template: azure-pipelines-templates/deploy/step/function-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            FunctionAppName: $(FunctionAppNameProjection)
            DeploymentPackagePath: $(Pipeline.Workspace)/${{ parameters.SolutionBaseName }}/${{ parameters.SolutionBaseName }}.Projections.Functions.zip
        - template: azure-pipelines-templates/deploy/step/function-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            FunctionAppName: $(FunctionAppNameStub)
            DeploymentPackagePath: $(Pipeline.Workspace)/${{ parameters.SolutionBaseName }}/${{ parameters.SolutionBaseName }}.StubApi.Functions.zip
        - template: azure-pipelines-templates/deploy/step/app-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            AppServiceName: $(AppServiceName)
            DeploymentPackagePath: $(Pipeline.Workspace)/${{ parameters.SolutionBaseName }}/${{ parameters.SolutionBaseName }}.Web.zip
        - template: azure-pipelines-templates/deploy/step/appservice-remove-ip.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            ResourceName: $()   