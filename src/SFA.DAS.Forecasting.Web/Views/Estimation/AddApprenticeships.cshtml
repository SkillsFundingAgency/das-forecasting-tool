@using SFA.DAS.Forecasting.Web.Extensions
@using SFA.DAS.Forecasting.Web.Configuration
@model SFA.DAS.Forecasting.Web.ViewModels.AddEditApprenticeshipsViewModel

@{
    /**/
    if (Model.ApprenticeshipsId == null)
    {
        ViewBag.Title = "Add Apprenticeships";
        ViewBag.Description = "Add Apprenticeships to your Estimation";
    }
    else
    {
        ViewBag.Title = "Edit Apprenticeships";
        ViewBag.Description = "Edit Apprenticeships on your Estimation";
    }
    ViewBag.GaData.Vpv = "/forecasting/estimation/page-add-apprenticeships";
    ViewBag.ZenDeskLabel = "eas-add-apprenticeships-to-estimate cost";
}

@section breadcrumb
{
    <div class="das-js-back-link"></div>
}

<div class="govuk-grid-row" id="estimate-add-apprenticeship">
    <div class="govuk-grid-column-two-thirds">
        
        @Html.Partial("_validationErrors")

        @if (Model.ApprenticeshipsId == null)
        {
            @Html.Partial("_addApprenticeshipContent")
        }
        else
        {
            @Html.Partial("_editApprenticeshipContent")
        }

        <form method="post" asp-route="@RouteNames.SaveApprenticeship" asp-route-hashedAccountId="@Model.HashedAccountId" asp-route-estimationName="@Model.EstimationName">
            
                <input asp-for="FundingPeriodsJson" type="hidden"/>
                <input asp-for="CalculatedTotalCap" type="hidden"/>

                @if (Model.ApprenticeshipsId == null)
                {
                    <div asp-fieldname="IsTransferFunded">
                        <fieldset class="govuk-fieldset">
                           <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">Will this apprenticeship be funded by your transfer allowance?</legend>
                            @Html.ValidationMessageFor(m => m.IsTransferFunded, null, new {@class="govuk-error-message", id = "error-message-" + Html.IdFor(m => m.IsTransferFunded)})
                            <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                                <div class="govuk-checkboxes__item">
                                    <input class="govuk-checkboxes__input" id="IsTransferFunded" type="checkbox" name="IsTransferFunded" @isChecked(Model.IsTransferFunded)>
                                    <label class="govuk-checkboxes__label" for="IsTransferFunded">Use transfer allowance</label>
                                </div>
                            </div>
                        </fieldset>
                    </div>
                    <div asp-fieldname="Course">
                        <label class="govuk-label govuk-label--s" for="choose-apprenticeship">Choose apprenticeship</label>
                        @Html.ValidationMessageFor(m => m.Course, null, new {@class="govuk-error-message", id = "error-message-" + Html.IdFor(m => m.Course)})
                        @Html.DropDownListFor(model =>
                            model.Course.Id,
                            @Model.ApprenticeshipCourses,
                            "Select one",
                            new {@class = "govuk-select", aria_label = "Apprenticeship training course", name = "choose-apprenticeship", id = "choose-apprenticeship"})
                    </div>
                }
                else
                {
                    <div class="govuk-form-group" id="editmode">
                        <p>
                            <strong class="govuk-label govuk-label--s" id="course" for="apprenticeship" data-funding-cap="@Model.FundingCapCalculated">Apprenticeship</strong>
                            @Model.Course.Title - Level: @Model.Course.Level
                        </p>
                        @Html.HiddenFor(m => m.Course.Title)
                        @Html.HiddenFor(m => m.Course.Level)
                        @Html.HiddenFor(m => m.Course.Id)
                        @Html.HiddenFor(m => m.ApprenticeshipsId)

                    </div>
                }

                <div asp-fieldname="NumberOfApprentices" asp-additionalclass="no-of-apprentice">
                    <label class="govuk-label govuk-label--s" for="no-of-app">Number of apprentices</label>
                    @Html.ValidationMessageFor(m => m.NumberOfApprentices, "Please specify the number of apprentices. ", new {@class="govuk-error-message", id = "error-message-" + Html.IdFor(m => m.NumberOfApprentices)})
                    @Html.TextBoxFor(model => model.NumberOfApprentices, new {@class = "govuk-input govuk-input--width-2", aria_label = "Number of apprentices", name = "no-of-app", id = "no-of-app", type = "number", @Value = valueOrEmpty(Model.NumberOfApprentices)})
                </div>

                <div asp-fieldname="NumberOfApprentices" asp-additionalclass="no-of-months">
                    <label class="govuk-label govuk-label--s" for="apprenticeship-length">Number of months</label>
                    <div class="govuk-hint">Apprenticeships must be a minimum of 12 months</div>

                    @Html.ValidationMessageFor(m => m.TotalInstallments, "Please specify a valid number of months. ", new {@class="govuk-error-message", id = "error-message-" + Html.IdFor(m => m.TotalInstallments)})
                    @Html.TextBoxFor(model => model.TotalInstallments, new {@class = "govuk-input govuk-input--width-2", id = "apprenticeship-length", name = "apprenticeship-length", type = "number", @Value = valueOrEmpty(Model.TotalInstallments)})
                </div>

                <div asp-fieldname="StartDate,StartDateMonth,StartDateYear" id="dateWrapper">
                    <fieldset class="govuk-fieldset" role="group">
                        <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">Start date</legend>
                        <div class="govuk-hint">For example, 09 2018</div>

                        @Html.ValidationMessageFor(m => m.StartDate, null, new {@class="govuk-error-message", id = "error-message-" + Html.IdFor(m => m.StartDate)})
                        @Html.HiddenFor(m => m.StartDate)

                        @Html.ValidationMessageFor(m => m.StartDateMonth, "Please specify a start month. ", new {@class="govuk-error-message", id = "error-message-" + Html.IdFor(m => m.StartDateMonth)})
                        @Html.ValidationMessageFor(m => m.StartDateYear, "Please specify a start year. ", new {@class="govuk-error-message", id = "error-message-" + Html.IdFor(m => m.StartDateYear)})

                        <div class="govuk-date-input">
                            <div class="govuk-date-input__item">
                                <div asp-fieldname="StartDateMonth" asp-additionalclass="govuk-form-group">
                                    <label for="startDateMonth" class="govuk-label govuk-date-input__label">Month</label>
                                    @Html.TextBoxFor(model => model.StartDateMonth, new {@class = "govuk-input govuk-date-input__input govuk-input--width-2", name = "startDateMonth", id = "startDateMonth", type = "number", pattern = "[0-9]*", placeholder = "MM", @Value = valueOrEmpty(Model.StartDateMonth)})
                                </div>
                            </div>
                            <div class="govuk-date-input__item">
                                <div asp-fieldname="StartDateYear" asp-additionalclass="govuk-form-group">
                                    <label for="startDateYear" class="govuk-label govuk-date-input__label">Year</label>
                                    @Html.TextBoxFor(model => model.StartDateYear, new {@class = "govuk-input govuk-date-input__input govuk-input--width-4", name = "startDateYear", id = "startDateYear", type = "number", pattern = "[0-9]*", placeholder = "YYYY", @Value = valueOrEmpty(Model.StartDateYear)})
                                </div>
                            </div>
                        </div>
                    </fieldset>
                </div>


                <div class="govuk-form-group">
                    <h2 class="govuk-heading-s govuk-!-margin-bottom-1">Government funding band maximum</h2>

                    @{
                        decimal fundingCap = 0;
                        if (Model.Course != null)
                        {
                            fundingCap = Model.Course.FundingCap;
                        }
                    }

                    <div id="details-about-funding-calculated" class="govuk-hint" style="display: none;">
                        Government funding band maximum for this apprenticeship is <span id="funding-cap-details">@fundingCap.FormatCost()</span><br/>
                        Total government funding band maximum for <b id="apprentice-count-details">@Model.NumberOfApprentices</b> apprentices is <b id="total-cap-details">@Model.CalculatedTotalCap.FormatCost() </b>
                    </div>

                    <div id="details-about-funding" class="govuk-hint">
                        Choose an apprenticeship and number of apprentices to see this figure <br>
                        <a href="https://www.gov.uk/government/publications/apprenticeship-funding-bands" target="fundingbands" class="govuk-link">More information about maximum government funding bands</a>
                    </div>
                </div>

                <div asp-fieldname="TotalCostAsString">
                    <label class="govuk-label govuk-label--s" for="total-funding-cost">Total cost</label>
                    <div class="govuk-hint">You can change this number but if you go above the funding band maximum value - the difference will be co-invested</div>
                    @Html.ValidationMessageFor(m => m.TotalCostAsString, "Please specify the total cost. ", new {@class="govuk-error-message", id = "error-message-" + Html.IdFor(m => m.TotalCostAsString)})

                    <div class="govuk-input__wrapper">
                        <div class="govuk-input__prefix" aria-hidden="true">Â£</div>
                        @Html.TextBoxFor(model => model.TotalCostAsString, new {@class = "govuk-input govuk-input--width-10 total-funding-cost", id = "total-funding-cost", name = "total-funding-cost", type = "text"})
                    </div>


                </div>

                <div class="govuk-button-group">
                    <button type="submit" id="save" name="save" value="Create" class="govuk-button save">Check if I can fund these</button>
                    <a asp-route="@RouteNames.EstimatedCost" asp-route-hashedAccountId="@Model.HashedAccountId" asp-route-estimateName="@Model.EstimationName" aria-label="Cancel" class="govuk-link govuk-link--no-visited-state">
                        Cancel
                    </a>
                </div>

        </form>
    </div>
</div>

@section javascript {
    <script src="libs/accessible-autocomplete/accessible-autocomplete.min.js"></script>
    <script src="/js/apprenticeship.js" no-cdn></script>
}

@functions {
    public string valueOrEmpty(int value)
    {
        return value > 0 ? value.ToString() : "";
    }

    public string isChecked(string value)
    {
        return value == "on" ? "checked" : "";
    }
}
