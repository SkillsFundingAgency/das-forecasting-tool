@using SFA.DAS.Forecasting.Web.Extensions
@model SFA.DAS.Forecasting.Web.ViewModels.AddApprenticeshipViewModel

@{
    ViewBag.Title = "Add Apprenticeships";
    ViewBag.Description = "Add Apprenticeships to your Estimation";
}

@using (@Html.BeginForm("Save", "Estimation", FormMethod.Post))
{
    @Html.AntiForgeryToken()

        <div id="estimate-add-apprenticeship">
            <div class="grid-row">
                <div class="column-two-thirds">
                    <div class="hgroup form-group">
                        <a href="@Url.ExternalUrlAction("transfers", string.Empty, false)" class="link-back">Back to Transfers</a>

                        @Html.Partial("_validationErrors")

                        <h1 class="heading-xlarge">Add apprenticeships to estimate cost</h1>
                        <p>
                            Add the apprenticeship details so you can estimate the cost of the apprenticeships you've chosen. We will show the government cap on funds and typical duration of the apprenticeship. You can adjust the cost and monthly figures should you need to.
                        </p>
                    </div>
                </div>
            </div>

            <form method="post">
                <div class="grid-row">
                    <div class="column-two-thirds">
                        @Html.HiddenFor(m => m.IsTransferFunded)

                        <div class="form-group @Html.AddErrorClass(m => m.Course)">
                            <label class="form-label-bold" for="choose-apprenticeship">Choose apprenticeship</label>
                            @Html.ValidationMessageFor(m => m.Course, null, new { id = "error-message-" + Html.IdFor(m => m.Course) })
                            @Html.DropDownListFor(model =>
             model.CourseId,
             @Model.ApprenticeshipCourses,
             "Select one",
             new { @class = "form-control form-control-3-4", aria_label = "Apprenticeship training course", name = "choose-apprenticeship", id = "choose-apprenticeship" })
                        </div>


                        <div class="form-group no-of-apprentice @Html.AddErrorClass(m => m.NumberOfApprentices)">
                            <label class="form-label-bold" for="no-of-app">Number of apprentices</label>
                            @Html.ValidationMessageFor(m => m.NumberOfApprentices, null, new { id = "error-message-" + Html.IdFor(m => m.NumberOfApprentices) })
                            @Html.TextBoxFor(model => model.NumberOfApprentices, new { @class = "form-control", aria_label = "Number of apprentices", name = "no-of-app", id = "no-of-app", type = "text", @Value = valueOrEmpty(Model.NumberOfApprentices) })
                        </div>


                        <div class="form-group no-of-months @Html.AddErrorClass(m => m.TotalInstallments)">
                            <label class="form-label-bold" for="apprenticeship-length">Number of months</label>
                            <span class="form-hint">Apprenticeships must be a minimum of 12 months</span>
                            @Html.ValidationMessageFor(m => m.TotalInstallments, null, new { id = "error-message-" + Html.IdFor(m => m.TotalInstallments) })
                            @Html.TextBoxFor(model => model.TotalInstallments, new { @class = "form-control", id = "apprenticeship-length", name = "apprenticeship-length", type = "text", @Value = valueOrEmpty(Model.TotalInstallments) })
                        </div>

                        <div class="form-group  @Html.AddErrorClass(m => m.StartDate) @Html.AddErrorClass(m => m.StartDateMonth) @Html.AddErrorClass(m => m.StartDateYear)" id="dateWrapper">

                            <span class="form-label-bold">Start date</span>
                            <span class="form-hint">For example, 09 2018</span>

                            @Html.ValidationMessageFor(m => m.StartDate, null, new { id = "error-message-" + Html.IdFor(m => m.StartDate) })
                            @Html.HiddenFor(m => m.StartDate)

                            @Html.ValidationMessageFor(m => m.StartDateMonth, null, new { id = "error-message-" + Html.IdFor(m => m.StartDateMonth) })
                            @Html.ValidationMessageFor(m => m.StartDateYear, null, new { id = "error-message-" + Html.IdFor(m => m.StartDateYear) })
                            <div class="form-date">
                                <div class="form-group form-group-month @Html.AddErrorClass(m => m.StartDateMonth)">
                                    <label for="startDateMonth">Month</label>
                                    @Html.TextBoxFor(model => model.StartDateMonth, new { @class = "form-control", name = "startDateMonth", id = "startDateMonth", type = "number", pattern = "[0-9]*", placeholder = "MM", @Value = valueOrEmpty(Model.StartDateMonth) })
                                </div>
                                <div class="form-group form-group-year @Html.AddErrorClass(m => m.StartDateYear)">
                                    <label for="startDateYear">Year</label>
                                    @Html.TextBoxFor(model => model.StartDateYear, new { @class = "form-control", name = "startDateYear", id = "startDateYear", type = "number", pattern = "[0-9]*", placeholder = "YYYY", @Value = valueOrEmpty(Model.StartDateYear) })
                                </div>
                            </div>


                        </div>


                        <div class="form-group">
                            <label class="form-label-bold">Government funding band maximum</label>

                            @{
                                decimal fundingCap = 0;
                                if (Model.Course != null)
                                {
                                    fundingCap = Model.Course.FundingCap;
                                }
                            } 
                            <span id="details-about-funding-calculated" class="form-hint" style="display: none;">
                                Government funding band maximum for this apprenticeship is <span id="funding-cap-details">@fundingCap.FormatCost()</span><br />
                                Total government funding band maximum for <b id="apprentice-count-details">@Model.NumberOfApprentices</b> apprentices is <b id="total-cap-details">@Model.CalculatedTotalCap.FormatCost() </b>
                            </span>

                            <span id="details-about-funding" class="form-hint">
                                Choose an apprenticeship and number of apprentices to see this figure <br>
                                <a href="https://www.gov.uk/government/publications/apprenticeship-funding-bands" target="fundingbands">More information about maximum government funding bands</a>
                            </span>
                        </div>


                        <div class="form-group @Html.AddErrorClass(m => m.TotalCostAsString)">
                            <label class="form-label-bold" for="total-funding-cost">Total cost</label>
                            <span class="form-hint">You can change this number if the total cost is below the funding band maximum value - this is the highest amount you can transfer</span>
                            @Html.ValidationMessageFor(m => m.TotalCostAsString, null, new { id = "error-message-" + Html.IdFor(m => m.TotalCostAsString) })
                            <label class="form-label-bold">
                                &pound;
                                @Html.TextBoxFor(model => model.TotalCostAsString, new { @class = "form-control total-funding-cost", id = "total-funding-cost", name = "total-funding-cost", type = "text" })
                            </label>

                            
                        </div>
                    </div>
                </div>


                <hr />

                <div class="grid-row">

                    <div class="column-full">
                        <button type="submit" id="save" name="save" value="Create" class="button save">Check if I can fund these</button>
                        <a class="button text-link pull-right" href="cancel" style="float: right;">Cancel</a>

                    </div>
                </div>
            </form>
            <div class="grid-row hidden" id="existingApps">
                <div class="column-full">
                    <h3 class="heading-medium">
                        Estimated transfer costs by apprenticeships
                    </h3>

                </div>
            </div>

        </div>

}

@functions {
    public string valueOrEmpty(int value)
    {
        return value > 0 ? value.ToString() : "";
    }
}

@section script{
    @Scripts.Render("~/bundles/addApprenticeship")
}
